buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'kotlin'
apply plugin: 'maven-publish'

version = "$mc_version-$mod_version"
group = 'com.EmosewaPixel.pixellib'
archivesBaseName = 'pixellib'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = compileKotlin.kotlinOptions.jvmTarget = compileTestKotlin.kotlinOptions.jvmTarget = '1.8'

minecraft {
    mappings channel: 'snapshot', version: '20190920-1.14.3'

    accessTransformer = file('src/main/resources/META-INF/pixellib_at.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'debug'

            mods {
                pixellib {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'debug'

            mods {
                pixellib {
                    source sourceSets.main
                }
            }
        }
    }
}

configurations {
    mod
}

repositories {
    maven {
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
    maven {
        url 'https://minecraft.curseforge.com/api/maven/'
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:$mc_version-28.1.0"
    compile "kottle:Kottle:$kottle_version"
    mod "kottle:Kottle:$kottle_version"
    compileOnly fg.deobf("mezz.jei:jei-$mc_version:$jei_version:api")
    compile fg.deobf("mezz.jei:jei-$mc_version:$jei_version")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "PixelLib",
                "Specification-Vendor"    : "TheEmosewaPixel",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "$version",
                "Implementation-Vendor"   : "TheEmosewaPixel",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

task installMods(type: Copy, dependsOn: "deinstallMods") {
    from { configurations.mod }
    include "**/*.jar"
    into file("run/mods")
}

task deinstallMods(type: Delete) {
    delete fileTree(dir: "run/mods", include: "*.jar")
}

project.afterEvaluate {
    project.tasks['prepareRuns'].dependsOn(project.tasks['installMods'])
}

def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file:///$project.projectDir/mcmodsrepo"
        }
    }
}